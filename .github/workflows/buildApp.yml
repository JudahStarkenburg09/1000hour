# Tested: 2024/08/05
# by Kasper Arfman
name: Build APK App
on: workflow_dispatch

jobs:
  build-android:
    name: Build for Android
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Install Buildozer dependencies
        run: |
          sudo apt update
          sudo apt install -y git zip unzip autoconf libtool pkg-config zlib1g-dev libncurses5-dev libncursesw5-dev libtinfo5 cmake libffi-dev libssl-dev automake
          python -m pip install --upgrade pip
          pip install Cython==0.29.33
          pip install buildozer

      - name: Build with Buildozer
        run: |
          # Accept Android SDK licenses
          mkdir -p ~/.android
          echo "24333f8a63b6825ea9c5514f83c2829b004d1fee" > ~/.android/repositories.cfg
          # Build the APK
          buildozer android debug

      # Option 1: Using a specific commit hash for upload-artifact
      - name: Upload artifacts (specific commit)
        uses: actions/upload-artifact@65462800fd760344b1a7b4382951275fb9fe4c75 # v3.1.3
        with:
          name: package
          path: bin/*.apk

      # Option 2: Using v2 (uncomment if Option 1 fails)
      # - name: Upload artifacts (v2)
      #   uses: actions/upload-artifact@v2
      #   with:
      #     name: package
      #     path: bin/*.apk

      # Option 3: Using alternative action (uncomment if Options 1 and 2 fail)
      # - name: Upload as release
      #   uses: ncipollo/release-action@v1
      #   with:
      #     artifacts: "bin/*.apk"
      #     token: ${{ secrets.GITHUB_TOKEN }}
      #     draft: true
      #     prerelease: true
      #     tag: v0.1.${{ github.run_number }}
      #     name: "Development Build ${{ github.run_number }}"
      #     generateReleaseNotes: true

      # Option 4: Direct upload approach (uncomment if all above options fail)
      # - name: Prepare artifacts
      #   run: |
      #     mkdir -p $GITHUB_WORKSPACE/artifacts
      #     cp bin/*.apk $GITHUB_WORKSPACE/artifacts/
      #     echo "artifact_path=$GITHUB_WORKSPACE/artifacts" >> $GITHUB_OUTPUT
      #   id: upload
      #
      # - name: Archive artifacts (direct)
      #   uses: actions/upload-artifact@v2
      #   with:
      #     name: package
      #     path: ${{ steps.upload.outputs.artifact_path }}