name: Build APK App - Pre-built libffi
on: workflow_dispatch

jobs:
  build-android:
    name: Build for Android
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Install Buildozer dependencies
        run: |
          sudo apt update
          sudo apt install -y git zip unzip autoconf libtool pkg-config zlib1g-dev libncurses5-dev libncursesw5-dev libtinfo6 cmake libffi-dev libssl-dev automake libtool-bin
          python -m pip install --upgrade pip
          pip install Cython==0.29.33
          pip install buildozer

      - name: Update buildozer.spec
        run: |
          if [ -f buildozer.spec ]; then
            # Update or add the NDK version
            if grep -q "^android.ndk =" buildozer.spec; then
              sed -i 's/^android.ndk =.*/android.ndk = 25b/g' buildozer.spec
            else
              echo "android.ndk = 25b" >> buildozer.spec
            fi
            
            # Fix duplicate requirements if they exist
            if [ $(grep -c "^requirements =" buildozer.spec) -gt 1 ]; then
              reqs=$(grep "^requirements =" buildozer.spec | sed 's/^requirements = //g' | tr '\n' ',')
              reqs=${reqs%,}
              sed -i '/^requirements =/d' buildozer.spec
              echo "requirements = $reqs" >> buildozer.spec
            fi
            
            # Add p4a configuration
            if ! grep -q "^p4a.fork =" buildozer.spec; then
              echo "p4a.fork = kivy" >> buildozer.spec
            fi
            if ! grep -q "^p4a.branch =" buildozer.spec; then
              echo "p4a.branch = develop" >> buildozer.spec
            fi
            
            echo "Updated buildozer.spec:"
            cat buildozer.spec
          else
            echo "buildozer.spec not found!"
            exit 1
          fi

      - name: Setup pre-built libffi
        run: |
          # Create directories for pre-built packages
          mkdir -p .buildozer/android/platform/build-arm64-v8a/packages/
          
          # Download and extract pre-built libffi
          wget -q https://github.com/libffi/libffi/releases/download/v3.4.4/libffi-3.4.4.tar.gz
          mkdir -p libffi-prebuild
          tar -xzf libffi-3.4.4.tar.gz -C libffi-prebuild --strip-components=1
          
          # Create a hook to use pre-built libffi
          mkdir -p .buildozer/hooks
          cat > .buildozer/hooks/before_recipe_build.py << 'EOF'
          import os
          import shutil
          
          def before_recipe_build(recipe, arch):
              # Skip building libffi and use pre-built version
              if recipe.name == 'libffi':
                  print("Using pre-built libffi")
                  recipe_dir = recipe.get_build_dir(arch.arch)
                  
                  # If the recipe directory already exists, we'll use the pre-built version
                  if os.path.exists(recipe_dir):
                      print(f"Recipe directory already exists: {recipe_dir}")
                      return
                  
                  # Copy pre-built libffi to the recipe directory
                  prebuild_dir = os.path.join(os.getcwd(), 'libffi-prebuild')
                  if os.path.exists(prebuild_dir):
                      print(f"Copying pre-built libffi from {prebuild_dir} to {recipe_dir}")
                      os.makedirs(os.path.dirname(recipe_dir), exist_ok=True)
                      shutil.copytree(prebuild_dir, recipe_dir)
                      
                      # Create a dummy configure script that will succeed
                      with open(os.path.join(recipe_dir, 'configure'), 'w') as f:
                          f.write('#!/bin/sh\nexit 0\n')
                      os.chmod(os.path.join(recipe_dir, 'configure'), 0o755)
                  else:
                      print(f"Pre-built libffi directory not found: {prebuild_dir}")
          EOF

      - name: Build with Buildozer
        run: |
          mkdir -p ~/.android
          echo "24333f8a63b6825ea9c5514f83c2829b004d1fee" > ~/.android/repositories.cfg
          
          export ANDROIDNDK="/usr/local/lib/android/sdk/ndk/25.2.9519653"
          export ANDROIDNDK_HOME="/usr/local/lib/android/sdk/ndk/25.2.9519653"
          
          buildozer -v android debug

      - name: Upload APK
        uses: actions/upload-artifact@v4
        with:
          name: apk-package
          path: bin/*.apk
          if-no-files-found: warn
