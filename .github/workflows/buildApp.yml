name: Build Android APK
on: 
  workflow_dispatch:  # Allows manual triggering from GitHub UI

jobs:
  build-android:
    name: Build Android APK
    runs-on: ubuntu-20.04  # Using Ubuntu 20.04 for better compatibility with buildozer
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'  # Using Python 3.9 for better compatibility

      - name: Cache Buildozer global directory
        uses: actions/cache@v3
        with:
          path: ~/.buildozer
          key: buildozer-global-${{ hashFiles('buildozer.spec') }}

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            python3-pip \
            build-essential \
            git \
            python3 \
            python3-dev \
            ffmpeg \
            libsdl2-dev \
            libsdl2-image-dev \
            libsdl2-mixer-dev \
            libsdl2-ttf-dev \
            libportmidi-dev \
            libswscale-dev \
            libavformat-dev \
            libavcodec-dev \
            zlib1g-dev \
            libgstreamer1.0 \
            gstreamer1.0-plugins-base \
            gstreamer1.0-plugins-good \
            libffi-dev \
            autoconf \
            automake \
            libtool \
            pkg-config \
            openjdk-8-jdk \
            zip \
            unzip

      - name: Install Buildozer
        run: |
          pip install --upgrade Cython==0.29.33 wheel pip setuptools
          pip install --upgrade buildozer
          
          # Verify installation
          buildozer --version

      - name: Fix buildozer.spec if needed
        run: |
          if [ -f buildozer.spec ]; then
            echo "Checking buildozer.spec for issues..."
            
            # Fix duplicate requirements if they exist
            if [ $(grep -c "^requirements =" buildozer.spec) -gt 1 ]; then
              echo "Found duplicate requirements, fixing..."
              # Get all requirements lines
              reqs=$(grep "^requirements =" buildozer.spec | sed 's/^requirements = //g' | tr '\n' ',')
              # Remove the last comma if present
              reqs=${reqs%,}
              # Remove all requirements lines
              sed -i '/^requirements =/d' buildozer.spec
              # Add the combined requirements line
              echo "requirements = $reqs" >> buildozer.spec
              echo "Fixed duplicate requirements"
            fi
            
            # Set NDK version to a compatible one
            if grep -q "^android.ndk =" buildozer.spec; then
              sed -i 's/^android.ndk =.*/android.ndk = 23b/g' buildozer.spec
              echo "Set NDK version to 23b"
            else
              echo "android.ndk = 23b" >> buildozer.spec
              echo "Added NDK version 23b"
            fi
            
            # Make sure android.accept_sdk_license is set to True
            if grep -q "^android.accept_sdk_license =" buildozer.spec; then
              sed -i 's/^android.accept_sdk_license =.*/android.accept_sdk_license = True/g' buildozer.spec
            else
              echo "android.accept_sdk_license = True" >> buildozer.spec
            fi
            
            echo "Updated buildozer.spec:"
            cat buildozer.spec
          else
            echo "buildozer.spec not found!"
            exit 1
          fi

      - name: Build APK with Buildozer
        run: |
          # Create a log directory
          mkdir -p logs
          
          # Build with detailed logging
          buildozer -v android debug 2>&1 | tee logs/buildozer.log
          
          # Check if build was successful
          if [ -d "bin" ] && [ "$(ls -A bin/*.apk 2>/dev/null)" ]; then
            echo "Build successful! APK created."
            ls -la bin/
          else
            echo "Build failed or no APK generated."
            exit 1
          fi

      - name: Upload APK
        uses: actions/upload-artifact@v3
        with:
          name: app-debug
          path: bin/*.apk
          if-no-files-found: error

      - name: Upload build logs on failure
        if: failure()
        uses: actions/upload-artifact@v3
        with:
          name: build-logs
          path: logs/
